[
    {
        "command": "editor.action.clipboardCopyAction",
        "key": "cmd+c"
    },
    {
        "command": "editor.action.clipboardCutAction",
        "key": "cmd+x",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.clipboardCutAction",
        "key": "shift+delete",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.clipboardPasteAction",
        "key": "cmd+v"
    },
    {
        "command": "undo",
        "key": "cmd+z"
    },
    {
        "command": "workbench.action.closeActiveEditor",
        "key": "cmd+w"
    },
    {
        "command": "editor.action.triggerSuggest",
        "key": "ctrl+space",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.foldAll",
        "key": "shift+cmd+numpad_subtract",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldAll",
        "key": "shift+cmd+-",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.fold",
        "key": "cmd+numpad_subtract",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.fold",
        "key": "cmd+-",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+ctrl+/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+ctrl+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+cmd+/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+cmd+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.commentLine",
        "key": "cmd+/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.commentLine",
        "key": "cmd+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.tasks.build",
        "key": "cmd+f9"
    },
    {
        "command": "copyFilePath",
        "key": "shift+cmd+c",
        "when": "!editorFocus && !terminalFocus"
    },
    {
        "command": "workbench.action.debug.run",
        "key": "ctrl+d",
        "when": "debuggersAvailable && !inDebugMode && !terminalFocus"
    },
    {
        "command": "merge-conflict.accept.current",
        "key": "shift+ctrl+right",
        "when": "isInDiffEditor"
    },
    {
        "command": "merge-conflict.accept.incoming",
        "key": "shift+ctrl+left",
        "when": "isInDiffEditor"
    },
    {
        "command": "workbench.action.quickOpenNavigateNext",
        "key": "ctrl+tab",
        "when": "inQuickOpen"
    },
    {
        "command": "git.openChange",
        "key": "cmd+d"
    },
    {
        "command": "editor.action.goToDeclaration",
        "key": "cmd+down",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.goToDeclaration",
        "key": "f4",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "key": "shift+f4",
        "when": "emptyWorkspaceSupport"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "enter",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "enter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "command": "acceptAlternativeSelectedSuggestion",
        "key": "tab",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "shift+cmd+enter",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "shift+cmd+enter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "command": "editor.action.deleteLines",
        "key": "cmd+backspace",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesDownAction",
        "key": "cmd+d",
        "when": "editorTextFocus && !editorReadonly && !editorHasSelection"
    },
    {
        "command": "editor.action.joinLines",
        "key": "shift+ctrl+j",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "cursorLineEnd",
        "key": "end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEnd",
        "key": "cmd+right",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEnd",
        "key": "ctrl+e",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEndSelect",
        "key": "shift+end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEndSelect",
        "key": "shift+cmd+right",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "home",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "cmd+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "ctrl+a",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStartSelect",
        "key": "shift+home",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStartSelect",
        "key": "shift+cmd+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorBottom",
        "key": "cmd+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorBottomSelect",
        "key": "shift+cmd+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTop",
        "key": "cmd+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTopSelect",
        "key": "shift+cmd+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageDown",
        "key": "pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageDownSelect",
        "key": "shift+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageUp",
        "key": "pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageUpSelect",
        "key": "shift+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "lineBreakInsert",
        "key": "cmd+enter",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.action.insertLineAfter",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && !notebookEditorFocused"
    },
    {
        "command": "editor.action.insertLineAfter",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "command": "cursorBottom",
        "key": "cmd+end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTop",
        "key": "cmd+home",
        "when": "textInputFocus"
    },
    {
        "command": "editor.action.toggleColumnSelection",
        "key": "shift+cmd+8"
    },
    {
        "command": "editor.unfoldAll",
        "key": "shift+cmd+numpad_add",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldAll",
        "key": "shift+cmd+=",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfold",
        "key": "cmd+numpad_add",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfold",
        "key": "cmd+=",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "workbench.action.findInFiles",
        "key": "shift+cmd+f"
    },
    {
        "command": "workbench.action.findInFiles",
        "key": "shift+cmd+f",
        "when": "!explorerResourceIsFolder || !filesExplorerFocus"
    },
    {
        "command": "editor.action.nextMatchFindAction",
        "key": "cmd+g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.nextMatchFindAction",
        "key": "cmd+g",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "command": "editor.action.previousMatchFindAction",
        "key": "shift+cmd+g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.previousMatchFindAction",
        "key": "shift+cmd+g",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "command": "workbench.action.files.newUntitledFile",
        "key": "cmd+n",
        "when": "(!editorHasCodeActionsProvider && editorTextFocus) || !editorTextFocus"
    },
    {
        "command": "workbench.action.files.newUntitledFile",
        "key": "ctrl+enter",
        "when": "(!editorHasCodeActionsProvider && editorTextFocus) || !editorTextFocus"
    },
    {
        "command": "workbench.action.showCommands",
        "key": "shift+cmd+a"
    },
    {
        "command": "workbench.action.showAllSymbols",
        "key": "cmd+o"
    },
    {
        "command": "workbench.action.quickOpen",
        "key": "shift+cmd+o"
    },
    {
        "command": "workbench.action.gotoLine",
        "key": "cmd+l"
    },
    {
        "command": "editor.action.marker.next",
        "key": "f2",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.marker.prev",
        "key": "shift+f2",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.goToTypeDefinition",
        "key": "shift+cmd+b",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.goToTypeDefinition",
        "key": "shift+ctrl+b",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape",
        "when": "!editorFocus && !terminalFocus && !problemFocus && !inDebugRepl"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape",
        "when": "explorerViewletFocus"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape"
    },
    {
        "command": "workbench.action.maximizeEditor",
        "key": "shift+cmd+f12"
    },
    {
        "command": "workbench.action.navigateToLastEditLocation",
        "key": "shift+cmd+backspace"
    },
    {
        "command": "workbench.action.files.newUntitledFile",
        "key": "shift+cmd+n",
        "when": "(!editorHasCodeActionsProvider && editorTextFocus) || !editorTextFocus"
    },
    {
        "command": "editor.action.triggerParameterHints",
        "key": "cmd+p",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "command": "workbench.action.compareEditor.previousChange",
        "key": "shift+f7",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.previousEditor",
        "key": "shift+cmd+["
    },
    {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+`"
    },
    {
        "command": "editor.action.previewDeclaration",
        "key": "cmd+y"
    },
    {
        "command": "editor.action.showHover",
        "key": "f1",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.showHover",
        "key": "ctrl+j",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.openRecent",
        "key": "cmd+e",
        "when": "!inQuickOpen"
    },
    {
        "command": "workbench.action.openPreviousEditorFromHistory",
        "key": "cmd+e",
        "when": "inQuickOpen"
    },
    {
        "command": "editor.action.rename",
        "key": "shift+f6",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.startFindReplaceAction",
        "key": "cmd+r",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "command": "workbench.action.replaceInFiles",
        "key": "shift+cmd+r"
    },
    {
        "command": "workbench.action.debug.continue",
        "key": "f9",
        "when": "inDebugMode"
    },
    {
        "command": "workbench.action.tasks.reRunTask",
        "key": "ctrl+r",
        "when": "taskCommandsRegistered && !terminalFocus"
    },
    {
        "command": "workbench.action.files.saveAll",
        "key": "cmd+s"
    },
    {
        "command": "workbench.action.showCommands",
        "key": "shift shift"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "ctrl+cmd+g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.addSelectionToNextFindMatch",
        "key": "ctrl+g",
        "when": "editorFocus"
    },
    {
        "command": "workbench.action.showErrorsWarnings",
        "key": "cmd+f1",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.tasks.configureTaskRunner",
        "key": "cmd+;"
    },
    {
        "command": "workbench.action.openGlobalSettings",
        "key": "cmd+,"
    },
    {
        "command": "workbench.action.debug.stepInto",
        "key": "f7",
        "when": "debugState != 'inactive'"
    },
    {
        "command": "workbench.action.debug.stepOut",
        "key": "shift+f8",
        "when": "debugState == 'stopped'"
    },
    {
        "command": "workbench.action.debug.stepOver",
        "key": "f8",
        "when": "debugState == 'stopped'"
    },
    {
        "command": "workbench.action.toggleFullScreen",
        "key": "ctrl+cmd+f"
    },
    {
        "command": "editor.debug.action.toggleBreakpoint",
        "key": "cmd+f8",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "command": "java.action.showTypeHierarchy",
        "key": "ctrl+h",
        "when": "editorLangId == java && javaLSReady && editorTextFocus"
    },
    {
        "command": "cursorUndo",
        "key": "shift+ctrl+g",
        "when": "textInputFocus"
    },
    {
        "command": "git.sync",
        "key": "cmd+t"
    },
    {
        "command": "workbench.view.debug",
        "key": "shift+cmd+f8"
    },
    {
        "command": "-workbench.view.debug",
        "key": "shift+cmd+d"
    },
    {
        "command": "-workbench.action.navigateBack",
        "key": "ctrl+-"
    },
    {
        "command": "-references-view.showCallHierarchy",
        "key": "shift+alt+h"
    },
    {
        "command": "-git.commitAll",
        "key": ""
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "cmd+i"
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "alt+escape"
    },
    {
        "command": "-editor.foldAll",
        "key": "cmd+k cmd+0"
    },
    {
        "command": "-editor.fold",
        "key": "alt+cmd+["
    },
    {
        "command": "-editor.foldRecursively",
        "key": "cmd+k cmd+["
    },
    {
        "command": "-editor.action.blockComment",
        "key": "shift+alt+a"
    },
    {
        "command": "-workbench.action.tasks.build",
        "key": "shift+cmd+b"
    },
    {
        "command": "-copyFilePath",
        "key": "alt+cmd+c"
    },
    {
        "command": "-workbench.action.debug.run",
        "key": "ctrl+f5"
    },
    {
        "command": "-merge-conflict.accept.current",
        "key": ""
    },
    {
        "command": "-merge-conflict.accept.incoming",
        "key": ""
    },
    {
        "command": "-workbench.action.quickOpenNavigateNext",
        "key": ""
    },
    {
        "command": "-git.openChange",
        "key": ""
    },
    {
        "command": "-editor.action.goToDeclaration",
        "key": ""
    },
    {
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "key": "cmd+k o"
    },
    {
        "command": "-acceptSelectedSuggestion",
        "key": "tab"
    },
    {
        "command": "-acceptAlternativeSelectedSuggestion",
        "key": "shift+tab"
    },
    {
        "command": "-acceptAlternativeSelectedSuggestion",
        "key": "shift+enter"
    },
    {
        "command": "-editor.action.deleteLines",
        "key": "shift+cmd+k"
    },
    {
        "command": "-editor.action.copyLinesDownAction",
        "key": "shift+alt+down"
    },
    {
        "command": "-editor.action.joinLines",
        "key": "ctrl+j"
    },
    {
        "command": "-cursorLineEndSelect",
        "key": "ctrl+shift+e"
    },
    {
        "command": "-cursorLineStartSelect",
        "key": "ctrl+shift+a"
    },
    {
        "command": "-cursorBottom",
        "key": "cmd+down"
    },
    {
        "command": "-cursorBottomSelect",
        "key": "shift+cmd+down"
    },
    {
        "command": "-cursorTop",
        "key": "cmd+up"
    },
    {
        "command": "-cursorTopSelect",
        "key": "shift+cmd+up"
    },
    {
        "command": "-cursorWordRightSelect",
        "key": "alt+shift+right"
    },
    {
        "command": "-cursorWordLeftSelect",
        "key": "alt+shift+left"
    },
    {
        "command": "-editor.action.smartSelect.grow",
        "key": ""
    },
    {
        "command": "-lineBreakInsert",
        "key": "ctrl+o"
    },
    {
        "command": "-editor.action.insertLineAfter",
        "key": "cmd+enter"
    },
    {
        "command": "-editor.action.insertLineBefore",
        "key": "shift+cmd+enter"
    },
    {
        "command": "-editor.action.toggleColumnSelection",
        "key": ""
    },
    {
        "command": "-editor.action.smartSelect.shrink",
        "key": "ctrl+shift+left"
    },
    {
        "command": "-editor.action.smartSelect.shrink",
        "key": "ctrl+shift+cmd+left"
    },
    {
        "command": "-editor.debug.action.selectionToRepl",
        "key": ""
    },
    {
        "command": "-editor.unfoldAll",
        "key": "cmd+k cmd+j"
    },
    {
        "command": "-editor.unfold",
        "key": "alt+cmd+]"
    },
    {
        "command": "-editor.unfoldRecursively",
        "key": "cmd+k cmd+]"
    },
    {
        "command": "-workbench.action.gotoSymbol",
        "key": "shift+cmd+o"
    },
    {
        "command": "-editor.action.nextMatchFindAction",
        "key": "f3"
    },
    {
        "command": "-editor.action.nextMatchFindAction",
        "key": "enter"
    },
    {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+f3"
    },
    {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+enter"
    },
    {
        "command": "-references-view.findReferences",
        "key": "shift+alt+f12"
    },
    {
        "command": "-workbench.action.navigateForward",
        "key": "ctrl+shift+-"
    },
    {
        "command": "-git.pushTo",
        "key": ""
    },
    {
        "command": "-workbench.action.showCommands",
        "key": "f1"
    },
    {
        "command": "-workbench.action.showCommands",
        "key": "shift+cmd+p"
    },
    {
        "command": "-workbench.action.showAllSymbols",
        "key": "cmd+t"
    },
    {
        "command": "-workbench.action.quickOpen",
        "key": "cmd+p"
    },
    {
        "command": "-editor.action.goToImplementation",
        "key": "cmd+f12"
    },
    {
        "command": "-workbench.action.gotoLine",
        "key": "ctrl+g"
    },
    {
        "command": "-editor.action.marker.next",
        "key": "alt+f8"
    },
    {
        "command": "-editor.action.marker.prev",
        "key": "shift+alt+f8"
    },
    {
        "command": "-editor.action.goToTypeDefinition",
        "key": ""
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "cmd+b"
    },
    {
        "command": "-workbench.action.maximizeEditor",
        "key": ""
    },
    {
        "command": "-workbench.action.navigateToLastEditLocation",
        "key": "cmd+k cmd+q"
    },
    {
        "command": "-editor.action.moveLinesDownAction",
        "key": "alt+down"
    },
    {
        "command": "-editor.action.moveLinesUpAction",
        "key": "alt+up"
    },
    {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": "ctrl+cmd+shift+down"
    },
    {
        "command": "-workbench.action.focusNextGroup",
        "key": ""
    },
    {
        "command": "-workbench.action.nextEditor",
        "key": "alt+cmd+right"
    },
    {
        "command": "-editor.action.organizeImports",
        "key": "shift+alt+o"
    },
    {
        "command": "-editor.action.triggerParameterHints",
        "key": "shift+cmd+space"
    },
    {
        "command": "-workbench.action.focusPreviousGroup",
        "key": ""
    },
    {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": "shift+f7"
    },
    {
        "command": "-workbench.action.previousEditor",
        "key": "alt+cmd+left"
    },
    {
        "command": "-workbench.action.selectTheme",
        "key": "cmd+k cmd+t"
    },
    {
        "command": "-editor.action.previewDeclaration",
        "key": ""
    },
    {
        "command": "-editor.action.showHover",
        "key": "cmd+k cmd+i"
    },
    {
        "command": "-workbench.action.openPreviousEditorFromHistory",
        "key": ""
    },
    {
        "command": "-editor.action.formatDocument",
        "key": "shift+alt+f"
    },
    {
        "command": "-editor.action.rename",
        "key": "f2"
    },
    {
        "command": "-editor.action.startFindReplaceAction",
        "key": "alt+cmd+f"
    },
    {
        "command": "-workbench.action.replaceInFiles",
        "key": "shift+cmd+h"
    },
    {
        "command": "-workbench.action.debug.continue",
        "key": "f5"
    },
    {
        "command": "-workbench.action.tasks.reRunTask",
        "key": ""
    },
    {
        "command": "-editor.debug.action.runToCursor",
        "key": ""
    },
    {
        "command": "-workbench.action.files.saveAll",
        "key": "alt+cmd+s"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "shift+cmd+l"
    },
    {
        "command": "-editor.action.addSelectionToNextFindMatch",
        "key": "cmd+d"
    },
    {
        "command": "-workbench.action.showErrorsWarnings",
        "key": ""
    },
    {
        "command": "-editor.action.quickFix",
        "key": "cmd+."
    },
    {
        "command": "-workbench.action.tasks.configureTaskRunner",
        "key": ""
    },
    {
        "command": "-workbench.action.openGlobalSettings",
        "key": ""
    },
    {
        "command": "-editor.action.referenceSearch.trigger",
        "key": ""
    },
    {
        "command": "-workbench.action.debug.stepInto",
        "key": "f11"
    },
    {
        "command": "-workbench.action.debug.stepOut",
        "key": "shift+f11"
    },
    {
        "command": "-workbench.action.debug.stepOver",
        "key": "f10"
    },
    {
        "command": "-editor.debug.action.toggleBreakpoint",
        "key": "f9"
    },
    {
        "command": "-java.action.showTypeHierarchy",
        "key": ""
    },
    {
        "command": "-cursorUndo",
        "key": "cmd+u"
    },
    {
        "command": "-git.revertSelectedRanges",
        "key": "cmd+k cmd+r"
    },
    {
        "command": "-git.sync",
        "key": ""
    },
    {
        "command": "-editor.action.dirtydiff.next",
        "key": "alt+f3"
    },
    {
        "command": "-editor.action.dirtydiff.previous",
        "key": "shift+alt+f3"
    },
    {
        "command": "workbench.action.navigateBack",
        "key": "cmd+[",
        "when": "canNavigateBack"
    },
    {
        "command": "references-view.showCallHierarchy",
        "key": "cmd+k h",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "command": "workbench.view.debug",
        "key": "ctrl+cmd+k d"
    },
    {
        "command": "editor.action.triggerSuggest",
        "key": "cmd+.",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+ctrl+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+cmd+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.blockComment",
        "key": "shift+cmd+/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.goToDeclaration",
        "key": "f4",
        "when": "editorTextFocus"
    },
    {
        "command": "cursorLineEnd",
        "key": "end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEnd",
        "key": "cmd+right",
        "when": "textInputFocus"
    },
    {
        "command": "editor.action.smartSelect.grow",
        "key": "cmd+;",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.insertLineBefore",
        "key": "ctrl+cmd+enter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.smartSelect.shrink",
        "key": "shift+cmd+;",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.debug.action.selectionToRepl",
        "key": "f6",
        "when": "debuggersAvailable && editorTextFocus && editorHasSelection"
    },
    {
        "command": "workbench.action.navigateForward",
        "key": "cmd+]",
        "when": "canNavigateForward"
    },
    {
        "command": "workbench.action.files.newUntitledFile",
        "key": "ctrl+cmd+n",
        "when": "(!editorHasCodeActionsProvider && editorTextFocus) || !editorTextFocus"
    },
    {
        "command": "editor.action.goToImplementation",
        "key": "ctrl+cmd+b",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "command": "workbench.action.gotoSymbol",
        "key": "shift+ctrl+o",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.goToTypeDefinition",
        "key": "shift+cmd+b",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.moveLinesDownAction",
        "key": "ctrl+cmd+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.moveLinesUpAction",
        "key": "ctrl+cmd+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.nextEditor",
        "key": "shift+cmd+]"
    },
    {
        "command": "editor.action.organizeImports",
        "key": "ctrl+cmd+k o",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "command": "editor.action.triggerParameterHints",
        "key": "cmd+k p",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "command": "workbench.action.previousEditor",
        "key": "shift+cmd+["
    },
    {
        "command": "editor.action.previewDeclaration",
        "key": "cmd+y"
    },
    {
        "command": "editor.action.showHover",
        "key": "cmd+k q",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.formatDocument",
        "key": "ctrl+cmd+l",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "command": "workbench.action.debug.continue",
        "key": "f9",
        "when": "inDebugMode"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "cmd+k g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.quickFix",
        "key": "ctrl+enter",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "java.action.showTypeHierarchy",
        "key": "cmd+4",
        "when": "editorLangId == java && javaLSReady && editorTextFocus"
    },
    {
        "command": "git.revertSelectedRanges",
        "key": "ctrl+cmd+z",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.dirtydiff.next",
        "key": "shift+ctrl+cmd+down",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.dirtydiff.previous",
        "key": "shift+ctrl+cmd+up",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.clipboardCopyAction",
        "key": "cmd+c"
    },
    {
        "command": "editor.action.clipboardCutAction",
        "key": "cmd+x",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.clipboardCutAction",
        "key": "shift+delete",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.clipboardPasteAction",
        "key": "cmd+v"
    },
    {
        "command": "undo",
        "key": "cmd+z"
    },
    {
        "command": "workbench.view.debug",
        "key": "cmd+5"
    },
    {
        "command": "workbench.action.closeActiveEditor",
        "key": "cmd+w"
    },
    {
        "command": "editor.foldAll",
        "key": "shift+cmd+numpad_subtract",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.foldAll",
        "key": "shift+cmd+-",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.fold",
        "key": "cmd+numpad_subtract",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.fold",
        "key": "cmd+-",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.action.commentLine",
        "key": "cmd+/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.commentLine",
        "key": "cmd+numpad_divide",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.tasks.build",
        "key": "cmd+f9"
    },
    {
        "command": "copyFilePath",
        "key": "shift+cmd+c",
        "when": "!editorFocus && !terminalFocus"
    },
    {
        "command": "workbench.action.debug.run",
        "key": "ctrl+d",
        "when": "debuggersAvailable && !inDebugMode && !terminalFocus"
    },
    {
        "command": "merge-conflict.accept.current",
        "key": "shift+ctrl+right",
        "when": "isInDiffEditor"
    },
    {
        "command": "merge-conflict.accept.incoming",
        "key": "shift+ctrl+left",
        "when": "isInDiffEditor"
    },
    {
        "command": "workbench.action.quickOpenNavigateNext",
        "key": "ctrl+tab",
        "when": "inQuickOpen"
    },
    {
        "command": "git.openChange",
        "key": "cmd+d"
    },
    {
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "key": "shift+f4",
        "when": "emptyWorkspaceSupport"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "enter",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "enter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "command": "acceptAlternativeSelectedSuggestion",
        "key": "tab",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "shift+cmd+enter",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "shift+cmd+enter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "command": "editor.action.deleteLines",
        "key": "cmd+backspace",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesDownAction",
        "key": "cmd+d",
        "when": "editorTextFocus && !editorReadonly && !editorHasSelection"
    },
    {
        "command": "editor.action.joinLines",
        "key": "shift+ctrl+j",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "cursorLineEndSelect",
        "key": "shift+end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineEndSelect",
        "key": "shift+cmd+right",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "home",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "cmd+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStart",
        "key": "ctrl+a",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStartSelect",
        "key": "shift+home",
        "when": "textInputFocus"
    },
    {
        "command": "cursorLineStartSelect",
        "key": "shift+cmd+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorBottom",
        "key": "cmd+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorBottomSelect",
        "key": "shift+cmd+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTop",
        "key": "cmd+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTopSelect",
        "key": "shift+cmd+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageDown",
        "key": "pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageDownSelect",
        "key": "shift+pagedown",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageUp",
        "key": "pageup",
        "when": "textInputFocus"
    },
    {
        "command": "cursorPageUpSelect",
        "key": "shift+pageup",
        "when": "textInputFocus"
    },
    {
        "command": "lineBreakInsert",
        "key": "cmd+enter",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "editor.action.insertLineAfter",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && !notebookEditorFocused"
    },
    {
        "command": "editor.action.insertLineAfter",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "command": "cursorBottom",
        "key": "cmd+end",
        "when": "textInputFocus"
    },
    {
        "command": "cursorTop",
        "key": "cmd+home",
        "when": "textInputFocus"
    },
    {
        "command": "editor.action.toggleColumnSelection",
        "key": "shift+cmd+8"
    },
    {
        "command": "editor.unfoldAll",
        "key": "shift+cmd+numpad_add",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfoldAll",
        "key": "shift+cmd+=",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfold",
        "key": "cmd+numpad_add",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.unfold",
        "key": "cmd+=",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "workbench.action.gotoSymbol",
        "key": "cmd+f12",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.findInFiles",
        "key": "shift+cmd+f"
    },
    {
        "command": "workbench.action.findInFiles",
        "key": "shift+cmd+f",
        "when": "!explorerResourceIsFolder || !filesExplorerFocus"
    },
    {
        "command": "editor.action.nextMatchFindAction",
        "key": "cmd+g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.nextMatchFindAction",
        "key": "cmd+g",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "command": "editor.action.previousMatchFindAction",
        "key": "shift+cmd+g",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.previousMatchFindAction",
        "key": "shift+cmd+g",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "command": "workbench.action.showCommands",
        "key": "shift+cmd+a"
    },
    {
        "command": "workbench.action.showAllSymbols",
        "key": "cmd+o"
    },
    {
        "command": "workbench.action.quickOpen",
        "key": "shift+cmd+o"
    },
    {
        "command": "workbench.action.gotoLine",
        "key": "cmd+l"
    },
    {
        "command": "editor.action.marker.next",
        "key": "f2",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.marker.prev",
        "key": "shift+f2",
        "when": "editorFocus"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape",
        "when": "!editorFocus && !terminalFocus && !problemFocus && !inDebugRepl"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape",
        "when": "explorerViewletFocus"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "shift+escape"
    },
    {
        "command": "workbench.action.maximizeEditor",
        "key": "shift+cmd+f12"
    },
    {
        "command": "workbench.action.navigateToLastEditLocation",
        "key": "shift+cmd+backspace"
    },
    {
        "command": "workbench.action.files.newUntitledFile",
        "key": "shift+cmd+n",
        "when": "(!editorHasCodeActionsProvider && editorTextFocus) || !editorTextFocus"
    },
    {
        "command": "workbench.action.compareEditor.previousChange",
        "key": "shift+f7",
        "when": "textCompareEditorVisible"
    },
    {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+`"
    },
    {
        "command": "workbench.action.openRecent",
        "key": "cmd+e",
        "when": "!inQuickOpen"
    },
    {
        "command": "workbench.action.openPreviousEditorFromHistory",
        "key": "cmd+e",
        "when": "inQuickOpen"
    },
    {
        "command": "editor.action.rename",
        "key": "shift+f6",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.startFindReplaceAction",
        "key": "cmd+r",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "command": "workbench.action.replaceInFiles",
        "key": "shift+cmd+r"
    },
    {
        "command": "workbench.action.tasks.reRunTask",
        "key": "ctrl+r",
        "when": "taskCommandsRegistered && !terminalFocus"
    },
    {
        "command": "workbench.action.files.saveAll",
        "key": "cmd+s"
    },
    {
        "command": "workbench.action.showCommands",
        "key": "shift shift"
    },
    {
        "command": "editor.action.addSelectionToNextFindMatch",
        "key": "ctrl+g",
        "when": "editorFocus"
    },
    {
        "command": "workbench.action.showErrorsWarnings",
        "key": "cmd+f1",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.tasks.configureTaskRunner",
        "key": "cmd+;"
    },
    {
        "command": "workbench.action.openGlobalSettings",
        "key": "cmd+,"
    },
    {
        "command": "workbench.action.debug.stepInto",
        "key": "f7",
        "when": "debugState != 'inactive'"
    },
    {
        "command": "workbench.action.debug.stepOut",
        "key": "shift+f8",
        "when": "debugState == 'stopped'"
    },
    {
        "command": "workbench.action.debug.stepOver",
        "key": "f8",
        "when": "debugState == 'stopped'"
    },
    {
        "command": "workbench.action.toggleFullScreen",
        "key": "ctrl+cmd+f"
    },
    {
        "command": "editor.debug.action.toggleBreakpoint",
        "key": "cmd+f8",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "command": "cursorUndo",
        "key": "shift+ctrl+g",
        "when": "textInputFocus"
    },
    {
        "command": "git.sync",
        "key": "cmd+t"
    },
    {
        "command": "workbench.view.debug",
        "key": "shift+cmd+f8"
    },
    {
        "command": "-workbench.view.debug",
        "key": "shift+cmd+d"
    },
    {
        "command": "-workbench.action.navigateBack",
        "key": "ctrl+-"
    },
    {
        "command": "-references-view.showCallHierarchy",
        "key": "shift+alt+h"
    },
    {
        "command": "-git.commitAll",
        "key": ""
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "cmd+i"
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "alt+escape"
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "ctrl+space"
    },
    {
        "command": "-editor.foldAll",
        "key": "cmd+k cmd+0"
    },
    {
        "command": "-editor.fold",
        "key": "alt+cmd+["
    },
    {
        "command": "-editor.foldRecursively",
        "key": "cmd+k cmd+["
    },
    {
        "command": "-editor.action.blockComment",
        "key": "shift+alt+a"
    },
    {
        "command": "-workbench.action.tasks.build",
        "key": "shift+cmd+b"
    },
    {
        "command": "-copyFilePath",
        "key": "alt+cmd+c"
    },
    {
        "command": "-workbench.action.debug.run",
        "key": "ctrl+f5"
    },
    {
        "command": "-merge-conflict.accept.current",
        "key": ""
    },
    {
        "command": "-merge-conflict.accept.incoming",
        "key": ""
    },
    {
        "command": "-workbench.action.quickOpenNavigateNext",
        "key": ""
    },
    {
        "command": "-git.openChange",
        "key": ""
    },
    {
        "command": "-editor.action.goToDeclaration",
        "key": ""
    },
    {
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "key": "cmd+k o"
    },
    {
        "command": "-acceptSelectedSuggestion",
        "key": "tab"
    },
    {
        "command": "-acceptAlternativeSelectedSuggestion",
        "key": "shift+tab"
    },
    {
        "command": "-acceptAlternativeSelectedSuggestion",
        "key": "shift+enter"
    },
    {
        "command": "-editor.action.deleteLines",
        "key": "shift+cmd+k"
    },
    {
        "command": "-editor.action.copyLinesDownAction",
        "key": "shift+alt+down"
    },
    {
        "command": "-editor.action.joinLines",
        "key": "ctrl+j"
    },
    {
        "command": "-cursorLineEnd",
        "key": "ctrl+e"
    },
    {
        "command": "-cursorLineEndSelect",
        "key": "ctrl+shift+e"
    },
    {
        "command": "-cursorLineStartSelect",
        "key": "ctrl+shift+a"
    },
    {
        "command": "-cursorBottom",
        "key": "cmd+down"
    },
    {
        "command": "-cursorBottomSelect",
        "key": "shift+cmd+down"
    },
    {
        "command": "-cursorTop",
        "key": "cmd+up"
    },
    {
        "command": "-cursorTopSelect",
        "key": "shift+cmd+up"
    },
    {
        "command": "-cursorWordRightSelect",
        "key": "alt+shift+right"
    },
    {
        "command": "-cursorWordLeftSelect",
        "key": "alt+shift+left"
    },
    {
        "command": "-editor.action.smartSelect.grow",
        "key": ""
    },
    {
        "command": "-lineBreakInsert",
        "key": "ctrl+o"
    },
    {
        "command": "-editor.action.insertLineAfter",
        "key": "cmd+enter"
    },
    {
        "command": "-editor.action.insertLineBefore",
        "key": "shift+cmd+enter"
    },
    {
        "command": "-editor.action.toggleColumnSelection",
        "key": ""
    },
    {
        "command": "-editor.action.smartSelect.shrink",
        "key": "ctrl+shift+left"
    },
    {
        "command": "-editor.action.smartSelect.shrink",
        "key": "ctrl+shift+cmd+left"
    },
    {
        "command": "-editor.debug.action.selectionToRepl",
        "key": ""
    },
    {
        "command": "-editor.unfoldAll",
        "key": "cmd+k cmd+j"
    },
    {
        "command": "-editor.unfold",
        "key": "alt+cmd+]"
    },
    {
        "command": "-editor.unfoldRecursively",
        "key": "cmd+k cmd+]"
    },
    {
        "command": "-workbench.action.gotoSymbol",
        "key": "shift+cmd+o"
    },
    {
        "command": "-editor.action.nextMatchFindAction",
        "key": "f3"
    },
    {
        "command": "-editor.action.nextMatchFindAction",
        "key": "enter"
    },
    {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+f3"
    },
    {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+enter"
    },
    {
        "command": "-references-view.findReferences",
        "key": "shift+alt+f12"
    },
    {
        "command": "-workbench.action.navigateForward",
        "key": "ctrl+shift+-"
    },
    {
        "command": "-workbench.action.files.newUntitledFile",
        "key": "cmd+n"
    },
    {
        "command": "-git.pushTo",
        "key": ""
    },
    {
        "command": "-workbench.action.showCommands",
        "key": "f1"
    },
    {
        "command": "-workbench.action.showCommands",
        "key": "shift+cmd+p"
    },
    {
        "command": "-workbench.action.showAllSymbols",
        "key": "cmd+t"
    },
    {
        "command": "-workbench.action.quickOpen",
        "key": "cmd+p"
    },
    {
        "command": "-editor.action.goToImplementation",
        "key": "cmd+f12"
    },
    {
        "command": "-workbench.action.gotoLine",
        "key": "ctrl+g"
    },
    {
        "command": "-editor.action.marker.next",
        "key": "alt+f8"
    },
    {
        "command": "-editor.action.marker.prev",
        "key": "shift+alt+f8"
    },
    {
        "command": "-editor.action.goToTypeDefinition",
        "key": ""
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "cmd+b"
    },
    {
        "command": "-workbench.action.maximizeEditor",
        "key": ""
    },
    {
        "command": "-workbench.action.navigateToLastEditLocation",
        "key": "cmd+k cmd+q"
    },
    {
        "command": "-editor.action.moveLinesDownAction",
        "key": "alt+down"
    },
    {
        "command": "-editor.action.moveLinesUpAction",
        "key": "alt+up"
    },
    {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": ""
    },
    {
        "command": "-workbench.action.focusNextGroup",
        "key": ""
    },
    {
        "command": "-workbench.action.nextEditor",
        "key": "alt+cmd+right"
    },
    {
        "command": "-editor.action.organizeImports",
        "key": "shift+alt+o"
    },
    {
        "command": "-editor.action.triggerParameterHints",
        "key": "shift+cmd+space"
    },
    {
        "command": "-workbench.action.focusPreviousGroup",
        "key": ""
    },
    {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": ""
    },
    {
        "command": "workbench.action.focusActiveEditorGroup",
        "key": "escape"
    },
    {
        "command": "-workbench.action.previousEditor",
        "key": "alt+cmd+left"
    },
    {
        "command": "-workbench.action.selectTheme",
        "key": "cmd+k cmd+t"
    },
    {
        "command": "-editor.action.previewDeclaration",
        "key": ""
    },
    {
        "command": "-editor.action.showHover",
        "key": "cmd+k cmd+i"
    },
    {
        "command": "-workbench.action.openPreviousEditorFromHistory",
        "key": ""
    },
    {
        "command": "-editor.action.formatDocument",
        "key": "shift+alt+f"
    },
    {
        "command": "-editor.action.rename",
        "key": "f2"
    },
    {
        "command": "-editor.action.startFindReplaceAction",
        "key": "alt+cmd+f"
    },
    {
        "command": "-workbench.action.replaceInFiles",
        "key": "shift+cmd+h"
    },
    {
        "command": "-workbench.action.debug.continue",
        "key": "f5"
    },
    {
        "command": "-workbench.action.tasks.reRunTask",
        "key": ""
    },
    {
        "command": "-editor.debug.action.runToCursor",
        "key": ""
    },
    {
        "command": "-workbench.action.files.saveAll",
        "key": "alt+cmd+s"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "shift+cmd+l"
    },
    {
        "command": "-editor.action.addSelectionToNextFindMatch",
        "key": "cmd+d"
    },
    {
        "command": "-workbench.action.showErrorsWarnings",
        "key": ""
    },
    {
        "command": "-editor.action.quickFix",
        "key": "cmd+."
    },
    {
        "command": "-workbench.action.tasks.configureTaskRunner",
        "key": ""
    },
    {
        "command": "-workbench.action.openGlobalSettings",
        "key": ""
    },
    {
        "command": "-editor.action.referenceSearch.trigger",
        "key": ""
    },
    {
        "command": "-workbench.action.debug.stepInto",
        "key": "f11"
    },
    {
        "command": "-workbench.action.debug.stepOut",
        "key": "shift+f11"
    },
    {
        "command": "-workbench.action.debug.stepOver",
        "key": "f10"
    },
    {
        "command": "-editor.debug.action.toggleBreakpoint",
        "key": "f9"
    },
    {
        "command": "-java.action.showTypeHierarchy",
        "key": ""
    },
    {
        "command": "-cursorUndo",
        "key": "cmd+u"
    },
    {
        "command": "-git.revertSelectedRanges",
        "key": "cmd+k cmd+r"
    },
    {
        "command": "-git.sync",
        "key": ""
    },
    {
        "command": "-editor.action.dirtydiff.next",
        "key": "alt+f3"
    },
    {
        "command": "-editor.action.dirtydiff.previous",
        "key": "shift+alt+f3"
    },
    {
        "command": "-workbench.action.navigateBack",
        "key": "cmd+alt+left"
    },
    {
        "command": "-references-view.showCallHierarchy",
        "key": "ctrl+alt+h"
    },
    {
        "command": "-workbench.view.debug",
        "key": "ctrl+alt+d"
    },
    {
        "command": "-editor.action.blockComment",
        "key": "cmd+alt+/"
    },
    {
        "command": "-editor.action.blockComment",
        "key": "cmd+alt+numpad_divide"
    },
    {
        "command": "-editor.action.blockComment",
        "key": "shift+ctrl+/"
    },
    {
        "command": "-editor.action.goToDeclaration",
        "key": "cmd+down"
    },
    {
        "command": "-editor.action.smartSelect.grow",
        "key": "alt+up"
    },
    {
        "command": "-editor.action.insertLineBefore",
        "key": "cmd+alt+enter"
    },
    {
        "command": "-editor.action.smartSelect.shrink",
        "key": "alt+down"
    },
    {
        "command": "-editor.debug.action.selectionToRepl",
        "key": "alt+f8"
    },
    {
        "command": "-workbench.action.navigateForward",
        "key": "cmd+alt+right"
    },
    {
        "command": "-workbench.action.files.newUntitledFile",
        "key": "ctrl+enter"
    },
    {
        "command": "-editor.action.goToImplementation",
        "key": "cmd+alt+b"
    },
    {
        "command": "-workbench.action.gotoSymbol",
        "key": "cmd+alt+o"
    },
    {
        "command": "-editor.action.goToTypeDefinition",
        "key": "shift+ctrl+b"
    },
    {
        "command": "-editor.action.moveLinesDownAction",
        "key": "shift+alt+down"
    },
    {
        "command": "-editor.action.moveLinesUpAction",
        "key": "shift+alt+up"
    },
    {
        "command": "-workbench.action.nextEditor",
        "key": "ctrl+right"
    },
    {
        "command": "-editor.action.organizeImports",
        "key": "ctrl+alt+o"
    },
    {
        "command": "-editor.action.triggerParameterHints",
        "key": "cmd+p"
    },
    {
        "command": "-workbench.action.previousEditor",
        "key": "ctrl+left"
    },
    {
        "command": "-editor.action.previewDeclaration",
        "key": "alt+space"
    },
    {
        "command": "-editor.action.showHover",
        "key": "f1"
    },
    {
        "command": "-editor.action.showHover",
        "key": "ctrl+j"
    },
    {
        "command": "-editor.action.formatDocument",
        "key": "cmd+alt+l"
    },
    {
        "command": "-workbench.action.debug.continue",
        "key": "cmd+alt+r"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "ctrl+cmd+g"
    },
    {
        "command": "-editor.action.quickFix",
        "key": "alt+enter"
    },
    {
        "command": "-java.action.showTypeHierarchy",
        "key": "ctrl+h"
    },
    {
        "command": "-git.revertSelectedRanges",
        "key": "cmd+alt+z"
    },
    {
        "command": "-editor.action.dirtydiff.next",
        "key": "shift+ctrl+alt+down"
    },
    {
        "command": "-editor.action.dirtydiff.previous",
        "key": "shift+ctrl+alt+up"
    },
    {
        "key": "ctrl+cmd+;",
        "command": "workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
    },
    {
        "key": "ctrl+cmd+;",
        "command": "workbench.action.chat.newEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+cmd+;",
        "command": "workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.focus",
        "when": "terminalHasBeenCreated && !terminalFocus || terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+alt+r",
        "command": "-remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'"
    },
    {
        "key": "cmd+1",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled && !explorerViewletFocus"
    },
    {
        "key": "cmd+numpad1",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled && !explorerViewletFocus"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+[BracketRight]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+f7",
        "command": "-chatEditor.action.navigatePrevious",
        "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-workbench.action.chat.previousCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "alt+[BracketLeft]",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "shift+alt+[BracketLeft]",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "shift+alt+[BracketLeft]",
        "command": "-editor.action.accessibleViewPrevious",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
    },
    {
        "key": "alt+[BracketLeft]",
        "command": "-editor.action.accessibleViewPrevious",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
    },
    {
        "key": "shift+alt+f10",
        "command": "-editor.action.previousCommentedRangeAction",
        "when": "activeEditorHasCommentingRange"
    },
    {
        "key": "cmd+k alt+cmd+up",
        "command": "-editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "ctrl+cmd+shift+up",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "-notebook.cell.joinAbove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "shift+alt+d",
        "command": "-notebook.cell.detectLanguage",
        "when": "notebookCellEditable && notebookEditable"
    },
    {
        "key": "alt+delete",
        "command": "-notebook.cell.clearOutputs",
        "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+up",
        "command": "-notebook.cell.moveUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+l",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+down",
        "command": "-notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-notebook.cell.copyUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "backspace",
        "command": "-noteMultiCursor.deleteLeft",
        "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
    },
    {
        "key": "alt+cmd+]",
        "command": "-notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+enter",
        "command": "-notebook.cell.executeAndInsertBelow",
        "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "shift+enter",
        "command": "-notebook.cell.executeAndSelectBelow",
        "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "cmd+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "ctrl+alt+cmd+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.accessibilityHelp",
        "when": "!accessibilityHelpIsShown"
    },
    {
        "key": "alt+f2",
        "command": "-editor.action.accessibleView"
    },
    {
        "key": "alt+cmd+l",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "alt+cmd+l",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+l",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+d",
        "command": "-editor.detectLanguage",
        "when": "editorTextFocus && !notebookEditable"
    },
    {
        "key": "alt+cmd+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "alt+f6",
        "command": "-editor.action.accessibleViewDisableHint",
        "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
    },
    {
        "key": "alt+cmd+=",
        "command": "-editor.unfoldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+numpad_add",
        "command": "-editor.unfoldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+-",
        "command": "-editor.foldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+numpad_subtract",
        "command": "-editor.foldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "alt+f7",
        "command": "-references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "alt+cmd+v",
        "command": "-workbench.action.editorDictation.start",
        "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
    },
    {
        "key": "alt+cmd+o",
        "command": "-workbench.action.remote.showMenu"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.accessibleViewNext",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.pageDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.pageUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+alt+cmd+home",
        "command": "-quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+home",
        "command": "-quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+end",
        "command": "-quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+end",
        "command": "-quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+down",
        "command": "-quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+down",
        "command": "-quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+up",
        "command": "-quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+up",
        "command": "-quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "alt+cmd+s",
        "command": "-saveAll"
    },
    {
        "key": "alt+down",
        "command": "-scm.forceViewNextCommit",
        "when": "scmRepository"
    },
    {
        "key": "alt+up",
        "command": "-scm.forceViewPreviousCommit",
        "when": "scmRepository"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "shift+alt+f",
        "command": "-search.action.restrictSearchToFolder",
        "when": "folderMatchWithResourceFocus && searchViewletVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "alt+cmd+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.tasks.runTask",
        "when": "taskCommandsRegistered && !terminalFocus"
    },
    {
        "key": "alt+f8",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "debuggersAvailable && workbench.panel.repl.view.active"
    },
    {
        "key": "alt+f8",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+m",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+f",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+v",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f7",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive"
    },
    {
        "key": "shift+alt+cmd+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+left",
        "command": "-cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+pagedown",
        "command": "-cursorColumnSelectPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+pageup",
        "command": "-cursorColumnSelectPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+up",
        "command": "-cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+enter",
        "command": "-testing.editFocusedTest",
        "when": "focusedView == 'workbench.view.testing'"
    },
    {
        "key": "alt+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+left",
        "command": "-cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+delete",
        "command": "-deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+.",
        "command": "-editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "alt+f9",
        "command": "-editor.action.nextCommentThreadAction"
    },
    {
        "key": "alt+f10",
        "command": "-editor.action.nextCommentedRangeAction",
        "when": "activeEditorHasCommentingRange"
    },
    {
        "key": "cmd+k alt+cmd+down",
        "command": "-editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "shift+alt+f9",
        "command": "-editor.action.previousCommentThreadAction"
    },
    {
        "key": "alt+cmd+backspace",
        "command": "-editor.action.removeBrackets",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+f",
        "command": "-repl.action.find",
        "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
    },
    {
        "key": "alt+end alt+end",
        "command": "-repl.focusLastItemExecuted",
        "when": "isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "-workbench.action.addComment",
        "when": "activeCursorHasCommentingRange"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-workbench.action.chat.runInTerminal",
        "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
    },
    {
        "key": "shift+alt+enter",
        "command": "-workbench.action.chat.submitWithoutDispatching",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation == 'editor' || chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation == 'panel' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editor' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'panel' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation == 'editor' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation == 'panel' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editor' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation == 'panel'"
    },
    {
        "key": "ctrl+cmd+shift+down",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "alt+f8",
        "command": "-testing.goToNextMessage",
        "when": "editorFocus && testing.isPeekVisible"
    },
    {
        "key": "shift+alt+f8",
        "command": "-testing.goToPreviousMessage",
        "when": "editorFocus && testing.isPeekVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-togglePreserveCase",
        "when": "editorFocus"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "f7",
        "command": "-chatEditor.action.navigateNext",
        "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
    },
    {
        "key": "shift+alt+f7",
        "command": "-chatEditor.action.toggleDiff",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "-copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+cmd+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "cmd+k shift+alt+cmd+c",
        "command": "-copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-debug.copyWatchExpression",
        "when": "watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView'"
    },
    {
        "key": "alt+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+-",
        "command": "-decreaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+a",
        "command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
        "when": "accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings"
    },
    {
        "key": "alt+k",
        "command": "-editor.action.accessibilityHelpConfigureKeybindings",
        "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
    },
    {
        "key": "alt+h",
        "command": "-editor.action.accessibilityHelpOpenHelpLink",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-editor.action.accessibleViewNextCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-editor.action.accessibleViewPreviousCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "alt+cmd+o",
        "command": "-editor.action.toggleOvertypeInsertMode"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showSubtypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showSupertypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
    },
    {
        "key": "shift+alt+f",
        "command": "-filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "alt+down",
        "command": "-history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "alt+up",
        "command": "-history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "alt+=",
        "command": "-increaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+cmd+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+cmd+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "alt+cmd+f",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-list.focusAnyDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+down",
        "command": "-list.focusAnyDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+home",
        "command": "-list.focusAnyFirst",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+end",
        "command": "-list.focusAnyLast",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-list.focusAnyUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+up",
        "command": "-list.focusAnyUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+f3",
        "command": "-notebook.diff.action.next",
        "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
    },
    {
        "key": "shift+alt+f3",
        "command": "-notebook.diff.action.previous",
        "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
    },
    {
        "key": "alt+h",
        "command": "-testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-toggleSearchPreserveCase",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-workbench.action.chat.nextCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.chat.sendToChatEditing",
        "when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'"
    },
    {
        "key": "alt+cmd+t",
        "command": "-workbench.action.closeOtherEditors"
    },
    {
        "key": "cmd+k alt+cmd+right",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "cmd+k alt+cmd+left",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "alt+cmd+tab",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "shift+alt+cmd+l",
        "command": "-workbench.action.quickchat.toggle",
        "when": "chatIsEnabled"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "alt+enter",
        "command": "-workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "alt+enter",
        "command": "-workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.terminal.chat.rerunRequest",
        "when": "terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "alt+f2",
        "command": "-workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+space",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "accessibilityModeEnabled && terminalFocus"
    },
    {
        "key": "ctrl+alt+g",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "alt+backspace",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "alt+delete",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "alt+z",
        "command": "-workbench.action.terminal.sizeToContentWidth",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-workbench.action.terminal.suggestToggleDetailsFocus",
        "when": "!textInputFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "alt+cmd+/",
        "command": "-workbench.command.prompts.use",
        "when": "config.chat.promptFiles"
    },
    {
        "key": "alt+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+left",
        "command": "-breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+cmd+f",
        "command": "-list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
        "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+v",
        "command": "-filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+home alt+home",
        "command": "-repl.input.focus",
        "when": "mostRecentReplEditor"
    },
    {
        "key": "alt+cmd+backspace",
        "command": "-deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
    },
    {
        "key": "shift+alt+f1",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode"
    },
    {
        "key": "ctrl+alt+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+k alt+cmd+s",
        "command": "-git.stageSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
    },
    {
        "key": "alt+cmd+.",
        "command": "-auto-close-tag.closeTag"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "shift+alt+b",
        "command": "-extension.openInSpecifyBrowser"
    },
    {
        "key": "alt+cmd+m",
        "command": "-extension.prettyJSON"
    },
    {
        "key": "alt+h",
        "command": "-git.viewFileHistory"
    },
    {
        "key": "alt+cmd+.",
        "command": "-github.copilot.chat.rerunWithCopilotDebug",
        "when": "github.copilot-chat.activated && terminalFocus && terminalShellIntegrationEnabled && !terminalAltBufferActive"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.key.alt+,",
        "when": "gitlens:key:,"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-svgPreview.showPreviewToSide",
        "when": "resourceLangId == 'svg' || resourceLangId == 'xml'"
    },
    {
        "key": "alt+cmd+u",
        "command": "-apps-sdk.local-dev.deploy",
        "when": "editorTextFocus || explorerViewletFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "alt+m",
        "command": "-extension.minifyJSON"
    },
    {
        "key": "alt+b",
        "command": "-extension.openInDefaultBrowser"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.key.alt+.",
        "when": "gitlens:key:."
    },
    {
        "key": "shift+alt+cmd+v",
        "command": "-quicktype.pasteJSONAsTypes",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f9",
        "command": "-ahk++.debug",
        "when": "shellExecutionSupported && editorLangId == 'ahk' || shellExecutionSupported && editorLangId == 'ahk2' || shellExecutionSupported && editorLangId == 'ahk' && editorLangId == 'ahk2'"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "alt+[",
        "command": "-github.copilot.previousPanelSolution",
        "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
    },
    {
        "key": "alt+enter",
        "command": "-gitlens.key.alt+enter",
        "when": "gitlens:key:alt+enter"
    },
    {
        "key": "ctrl+alt+m",
        "command": "-code-runner.stop"
    },
    {
        "key": "alt+]",
        "command": "-github.copilot.nextPanelSolution",
        "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
    },
    {
        "key": "alt+left",
        "command": "-gitlens.key.alt+left",
        "when": "gitlens:key:alt+left"
    },
    {
        "key": "alt+right",
        "command": "-gitlens.key.alt+right",
        "when": "gitlens:key:alt+right"
    },
    {
        "key": "alt+cmd+g shift+,",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "shift+alt+,",
        "command": "-gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+cmd+g .",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+cmd+g .",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+cmd+g .",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+cmd+y",
        "command": "-workbench.action.sync"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+cmd+g ,",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+cmd+g ,",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+cmd+l",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+cmd+g ,",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+cmd+g shift+.",
        "command": "-gitlens.diffWithWorking",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "shift+alt+.",
        "command": "-gitlens.diffWithWorking",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+/",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+cmd+g /",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+c",
        "command": "-gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+cmd+g c",
        "command": "-gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+cmd+g h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+cmd+g shift+h",
        "command": "-gitlens.showQuickRepoHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "shift+alt+h",
        "command": "-gitlens.showQuickRepoHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+cmd+g s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+cmd+g shift+b",
        "command": "-gitlens.toggleCodeLens",
        "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+right",
        "command": "-cursorWordRight",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords && !inlineSuggestionVisible"
    },
    {
        "key": "shift+alt+b",
        "command": "-gitlens.toggleCodeLens",
        "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+right",
        "command": "-cursorWordPartRight",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus && !inlineSuggestionVisible"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
    },
    {
        "key": "alt+left",
        "command": "-cursorWordLeft",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords"
    },
    {
        "key": "alt+cmd+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:blameable'"
    },
    {
        "key": "alt+left",
        "command": "-cursorWordPartStartLeft",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordPartRightSelect",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordPartStartLeftSelect",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordPartRight",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "editorTextFocus && !config.intellij-idea-keybindings.useCamelHumpsWords && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordPartLeft",
        "when": "config.intellij-idea-keybindings.useCamelHumpsWords && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.tasks.runTask"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "f7",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "f7",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "alt+f5",
        "command": "-chatEditor.action.navigateNext",
        "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "ctrl+cmd+;",
        "command": "claude-dev.SidebarProvider.focus"
    },
    {
        "key": "ctrl+cmd+;",
        "command": "workbench.view.extension.claude-dev-ActivityBar"
    },
    {
        "key": "cmd+f",
        "command": "actions.find"
    }
]